(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{207:function(t,a,v){t.exports=v.p+"assets/img/p4-1.2c6d98b9.png"},216:function(t,a,v){"use strict";v.r(a);var r=v(0),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"作用域闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作用域闭包"}},[t._v("#")]),t._v(" 作用域闭包")]),t._v(" "),r("h3",{attrs:{id:"一、作用域与作用域链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、作用域与作用域链"}},[t._v("#")]),t._v(" 一、作用域与作用域链")]),t._v(" "),r("p",[t._v("在详细讲解作用域链之前，需要明白JavaScript中的下面这些重要概念。这些概念将会非常有帮助。")]),t._v(" "),r("ul",[r("li",[t._v("基础数据类型与引用数据类型")]),t._v(" "),r("li",[t._v("内存空间")]),t._v(" "),r("li",[t._v("垃圾回收机制")]),t._v(" "),r("li",[t._v("执行上下文")]),t._v(" "),r("li",[t._v("变量对象与活动对象")])]),t._v(" "),r("h4",{attrs:{id:"作用域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("在JavaScript中，我们可以将作用域定义为一套规则，这套规则用来管理引擎如何在当前作用域以及嵌套的子作用域中根据标识符名称进行变量查找。")]),t._v(" "),r("blockquote",[r("p",[t._v("这里的标识符，指的是变量名或者函数名、")])])]),t._v(" "),r("li",[r("p",[t._v("JavaScript中只用全局作用域与函数作用域（因为eval我们平时开发中几乎不会用到它，这里不讨论）。")])]),t._v(" "),r("li",[r("p",[t._v("作用域与执行上下文是完全不同的两个概念。")]),t._v(" "),r("blockquote",[r("p",[t._v("JavaScript代码的整个执行过程，分为两个阶段，代码编译阶段与代码执行阶段。编译阶段由编译器完成，将代码翻译成可执行代码，这个阶段作用域规则会确定。执行阶段由引擎完成，主要任务是可执行代码，执行上下文在这个阶段创建。")])])])]),t._v(" "),r("p",[r("img",{attrs:{src:v(207),alt:"p1"}})])])}),[],!1,null,null,null);a.default=s.exports}}]);